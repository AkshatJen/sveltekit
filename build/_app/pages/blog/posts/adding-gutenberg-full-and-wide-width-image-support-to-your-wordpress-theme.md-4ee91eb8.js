import{S as e,i as t,s as a,e as o,t as i,k as n,j as r,c as s,a as h,g as l,d,n as c,m as u,b as f,_ as g,f as w,F as m,o as p,x as v,u as y,v as b,G as E}from"../../../chunks/vendor-d39b8e67.js";/* empty css                                                             */import{C as $}from"../../../chunks/Code-89bf94b1.js";function k(e){let t,a="//functions.php \n \nadd_theme_support( 'align-wide' );";return{c(){t=i(a)},l(e){t=l(e,a)},m(e,a){w(e,t,a)},p:E,d(e){e&&d(t)}}}function S(e){let t,a="/* style.css */\n \n.alignfull {\n    width: 100vw;\n    margin-left: calc(50% - 50vw);\n}";return{c(){t=i(a)},l(e){t=l(e,a)},m(e,a){w(e,t,a)},p:E,d(e){e&&d(t)}}}function x(e){let t,a="margin-left: calc(50% - 50vw);";return{c(){t=i(a)},l(e){t=l(e,a)},m(e,a){w(e,t,a)},p:E,d(e){e&&d(t)}}}function C(e){let t,a=".alignfull {\n    width: 100vw;\n    margin-left: calc(50% - 50vw);\n}";return{c(){t=i(a)},l(e){t=l(e,a)},m(e,a){w(e,t,a)},p:E,d(e){e&&d(t)}}}function P(e){let t,a="margin: 2rem calc(50% - 50vw);";return{c(){t=i(a)},l(e){t=l(e,a)},m(e,a){w(e,t,a)},p:E,d(e){e&&d(t)}}}function I(e){let t,a=".alignwide {\n    width: calc(100% + 20vw);\n    position: relative;\n    left: -10vw;\n}";return{c(){t=i(a)},l(e){t=l(e,a)},m(e,a){w(e,t,a)},p:E,d(e){e&&d(t)}}}function O(e){let t,a="/* style.css */\n \n.alignwide {\n  width: 100vw;\n  margin: 2rem calc(50% - 50vw);\n}\n \n@media (min-width: 960px) {\n  .alignwide {\n    width: calc(100% + 20vw);\n    margin: 2rem -10vw;\n  }\n}";return{c(){t=i(a)},l(e){t=l(e,a)},m(e,a){w(e,t,a)},p:E,d(e){e&&d(t)}}}function T(e){let t,a,E,T,D,j,G,A,W,M,F,H,N,_,q,z,R,B,Y,L,U,V,J,K,Q,X,Z,ee,te,ae,oe,ie,ne,re,se,he,le,de,ce,ue,fe,ge,we,me,pe,ve,ye,be,Ee,$e,ke,Se,xe,Ce,Pe,Ie,Oe,Te,De,je,Ge,Ae,We,Me,Fe,He,Ne,_e,qe,ze,Re,Be,Ye,Le,Ue,Ve,Je,Ke,Qe,Xe,Ze,et,tt,at,ot,it,nt,rt,st,ht,lt,dt,ct,ut,ft,gt,wt,mt,pt,vt,yt,bt,Et,$t,kt,St,xt,Ct,Pt,It,Ot,Tt,Dt,jt,Gt,At,Wt,Mt,Ft,Ht,Nt,_t,qt,zt,Rt,Bt,Yt,Lt,Ut,Vt,Jt,Kt,Qt,Xt,Zt,ea,ta,aa,oa,ia,na,ra,sa,ha,la,da,ca,ua,fa,ga,wa,ma,pa,va,ya,ba,Ea,$a,ka,Sa,xa,Ca,Pa,Ia,Oa,Ta,Da,ja,Ga,Aa,Wa,Ma,Fa,Ha,Na,_a,qa,za,Ra,Ba,Ya,La,Ua,Va,Ja,Ka,Qa,Xa,Za,eo,to,ao,oo,io,no,ro,so,ho,lo,co,uo,fo,go,wo,mo,po,vo,yo,bo,Eo,$o,ko,So,xo,Co,Po,Io,Oo,To,Do,jo,Go,Ao,Wo,Mo,Fo,Ho,No,_o,qo,zo,Ro,Bo,Yo,Lo,Uo,Vo,Jo,Ko,Qo,Xo,Zo,ei,ti,ai,oi,ii,ni,ri,si,hi,li,di,ci,ui,fi,gi,wi,mi,pi,vi,yi,bi,Ei,$i,ki,Si,xi,Ci,Pi,Ii,Oi,Ti,Di,ji,Gi,Ai,Wi,Mi,Fi,Hi,Ni,_i,qi,zi,Ri,Bi,Yi,Li,Ui,Vi,Ji,Ki,Qi,Xi,Zi,en,tn,an,on,nn,rn,sn,hn,ln,dn,cn,un,fn,gn,wn,mn,pn,vn,yn,bn,En,$n,kn,Sn,xn,Cn,Pn,In,On,Tn;return re=new $({props:{lang:"php",$$slots:{default:[k]},$$scope:{ctx:e}}}),Ue=new $({props:{lang:"css",$$slots:{default:[S]},$$scope:{ctx:e}}}),Ot=new $({props:{lang:"css",$$slots:{default:[x]},$$scope:{ctx:e}}}),co=new $({props:{lang:"css",$$slots:{default:[C]},$$scope:{ctx:e}}}),Io=new $({props:{lang:"css",$$slots:{default:[P]},$$scope:{ctx:e}}}),Ei=new $({props:{lang:"css",$$slots:{default:[I]},$$scope:{ctx:e}}}),Sn=new $({props:{lang:"css",$$slots:{default:[O]},$$scope:{ctx:e}}}),{c(){t=o("p"),a=i("Recently, I‚Äôve been using (and loving) the new "),E=o("a"),T=i("Gutenberg editor"),D=i(" in WordPress 5.0+. It‚Äôs a huge step forward in both what developers can offer, and what users can expect out of their content creation experience."),j=n(),G=o("p"),A=i("One of the new features of Gutenberg that I particularly enjoy is the ability to set an image as either ‚Äúwide width‚Äù or ‚Äúfull width,‚Äù to allow it to break out of its container element in order to span a greater width of the screen."),W=n(),M=o("p"),F=i("Here‚Äôs a visual example of what I mean:"),H=n(),N=o("p"),_=o("img"),z=n(),R=o("p"),B=o("strong"),Y=i("Ordinarily, an image would be constrained to the content width"),L=i(" (visualized by the dotted lines in the image above). Being able to allow images to break out of those confines is a powerful layout tool, though, as it allows content authors to add a great deal of visual interest and hierarchy to any page, post, or content supported by the new Gutenberg editor!"),U=n(),V=o("h2"),J=i("Adding Theme Support"),K=n(),Q=o("p"),X=i("Adding support for wide- and full-width images is up to the theme developer. Fortunately, from the backend, it‚Äôs dead simple; just add this line to the theme‚Äôs "),Z=o("code"),ee=i("functions.php"),te=i(" file (please be sure to use a "),ae=o("a"),oe=i("child theme"),ie=i(" as appropriate):"),ne=n(),r(re.$$.fragment),se=n(),he=o("p"),le=i("That tidy little snippet will make two new options available for image blocks in the Gutenberg editor, in addition to the usual options: ‚Äúwide width‚Äù and ‚Äúfull width,‚Äù highlighted in the image below:"),de=n(),ce=o("p"),ue=o("img"),ge=n(),we=o("p"),me=i("When the user chooses either of these options, the "),pe=o("code"),ve=i("<figure>"),ye=i(" element that appears on the front-end of the site (oh yeah‚Äîby default, Gutenberg puts images inside "),be=o("code"),Ee=i("<figure>"),$e=i(" elements, so that captions can be added easily. Anyway, that element, i.e., the image‚Äôs container) will have either an "),ke=o("code"),Se=i("alignwide"),xe=i(" or "),Ce=o("code"),Pe=i("alignfull"),Ie=i(" class applied to it (depending, of course, on which was selected by the content author)."),Oe=n(),Te=o("p"),De=o("strong"),je=i("That‚Äôs it for the PHP/back-end setup."),Ge=i(" Other than the snippet above, everything we‚Äôve covered so far is fully automatic and just handled by WordPress for us."),Ae=n(),We=o("p"),Me=i("However, we still need to actually "),Fe=o("em"),He=i("implement"),Ne=i(" these layout techniques on the front-end of the site, using our theme‚Äôs CSS. Otherwise, nothing will happen visually when a content author chooses the full-width or wide-with image option."),_e=n(),qe=o("h2"),ze=i("Front-End CSS for Full-Width Images"),Re=n(),Be=o("p"),Ye=i("I wanted to write this post mainly to share one technique that I came across online, which I feel is particularly clever in this situation (and which is not at all exclusive to Gutenberg or WordPress):"),Le=n(),r(Ue.$$.fragment),Ve=n(),Je=o("p"),Ke=i("Even though that bit of CSS above is very brief (only two properties!), I still want to be sure we cover what it‚Äôs doing, because it‚Äôs a pretty elegant solution for our needs."),Qe=n(),Xe=o("p"),Ze=i("The "),et=o("code"),tt=i("width"),at=i(" property is pretty straightforward: a value of "),ot=o("code"),it=i("100vw"),nt=i(" ensures that the image is always exactly as wide as the viewport, no matter what size that might be. (Remember, "),rt=o("code"),st=i("width: 100%"),ht=i(" might not work here, because percentages are based on the width of the "),lt=o("em"),dt=i("parent element"),ct=i(", not the screen, and our image‚Äôs parent element may or may not be as wide as the viewport.)"),ut=n(),ft=o("p"),gt=i("However, making the image "),wt=o("code"),mt=i("100vw"),pt=i(" wide on its own doesn‚Äôt do us much good on its own, because it would overflow the screen, as shown in this image:"),vt=n(),yt=o("p"),bt=o("img"),$t=n(),kt=o("p"),St=i("That brings us to the "),xt=o("code"),Ct=i("margin"),Pt=i(" property, which is the clever part. This is where the real CSS magic happens:"),It=n(),r(Ot.$$.fragment),Tt=n(),Dt=o("p"),jt=i("In case you‚Äôre new to the "),Gt=o("code"),At=i("calc"),Wt=i(" function, in essence, it lets you do math to set CSS values. It‚Äôs most commonly used in responsive design to, say, let your image take up a quarter of the available space, minus an 8px margin (which would be "),Mt=o("code"),Ft=i("width: calc(25% - 8px);"),Ht=i(")."),Nt=n(),_t=o("p"),qt=i("But "),zt=o("code"),Rt=i("calc"),Bt=i(" has many other uses, and can crunch numbers on any dynamic or static values, even between two different units of measurement (as in the previous example, to subtract "),Yt=o("em"),Lt=i("pixels"),Ut=i(" from a "),Vt=o("em"),Jt=i("percentage"),Kt=i(")."),Qt=n(),Xt=o("p"),Zt=i("Back to our fullwidth image: in order to make the image the full width of the screen and position it properly, we want to set a "),ea=o("em"),ta=i("negative margin."),aa=i(" And as you‚Äôve probably guessed, we‚Äôll need "),oa=o("code"),ia=i("calc"),na=i(" to help us, because the distance between the side of our container and the left edge of the screen is responsive, and always changing."),ra=n(),sa=o("p"),ha=o("strong"),la=i("So how do we determine how far the image needs to shift to the left?"),da=i(" Answer: we don‚Äôt. üòé"),ca=n(),ua=o("p"),fa=i("Instead, we‚Äôre going to send our image "),ga=o("em"),wa=i("halfway to the right."),ma=i(" That‚Äôs the "),pa=o("code"),va=i("50%"),ya=i(" portion of our "),ba=o("code"),Ea=i("calc"),$a=i(" formula:"),ka=n(),Sa=o("p"),xa=o("img"),Pa=n(),Ia=o("p"),Oa=i("Now we can begin to see the full picture (no pun intended)!"),Ta=n(),Da=o("p"),ja=i("Since percentage values are calculated based on the parent element‚Äôs width, a "),Ga=o("code"),Aa=i("margin"),Wa=i(" of "),Ma=o("code"),Fa=i("50%"),Ha=i(" sends the image exactly halfway across the parent element. And since our parent element is already centered on the screen, that means "),Na=o("strong"),_a=i("our image is now exactly halfway across the viewport, no matter how wide the viewport is!"),qa=n(),za=o("p"),Ra=i("Now that our image‚Äôs left side is directly in the center of the screen, the rest is just "),Ba=o("em"),Ya=i("subtracting"),La=n(),Ua=o("code"),Va=i("50vw"),Ja=i(" from the left margin‚Äîwhich is the other half of our calculation. Thus, "),Ka=o("code"),Qa=i("calc(50% - 50vw)"),Xa=i(" gives us exactly the full-width image we‚Äôre looking for!"),Za=n(),eo=o("p"),to=o("img"),oo=n(),io=o("h3"),no=i("Some Extra Notes About the Above Full-Width CSS"),ro=n(),so=o("p"),ho=i("Once more, here‚Äôs the CSS from above:"),lo=n(),r(co.$$.fragment),uo=n(),fo=o("p"),go=i("There‚Äôs one small issue here, which is: we don‚Äôt take into account the possibility that our "),wo=o("code"),mo=i(".alignfull"),po=i(" element might already have a right margin. If it does, it will actually be taking up "),vo=o("em"),yo=i("more than"),bo=i(" the full width of the screen, and that‚Äôs no good."),Eo=n(),$o=o("p"),ko=i("Plus, we probably want space above and below our fullwidth image, just to make it stand out a little more. So really, instead of setting just a "),So=o("code"),xo=i("margin-left"),Co=i(" property, we‚Äôd most likely be better off setting all four sides at once:"),Po=n(),r(Io.$$.fragment),Oo=n(),To=o("p"),Do=i("This way, we‚Äôve made sure all four sides of our image are accounted for while also giving the image a little breathing room."),jo=n(),Go=o("p"),Ao=i("And if you‚Äôre wondering (or just wanting to get super technical): yes, this "),Wo=o("em"),Mo=i("does"),Fo=i(" mean that "),Ho=o("em"),No=i("both"),_o=i(" sides of the image get brought in by "),qo=o("code"),zo=i("50%"),Ro=i(", then are each pulled back out "),Bo=o("code"),Yo=i("50vw"),Lo=i(". If you didn‚Äôt have the "),Uo=o("code"),Vo=i("- 50vw"),Jo=i(" part of the CSS above, the image would effectively be 0% wide (since it would have a margin of "),Ko=o("code"),Qo=i("50%"),Xo=i(" on both sides). Interesting! ü§ì"),Zo=n(),ei=o("p"),ti=i("Lastly, as you probably realized: "),ai=o("strong"),oi=i("this post assumes the content container is already centered on the screen"),ii=i(". If your content is "),ni=o("em"),ri=i("not"),si=i(" already centered in the viewport, this specific CSS won‚Äôt work for you, and you‚Äôll need to do something a little more creative to get your images full-width."),hi=n(),li=o("h2"),di=i("Front-End CSS for Wide-Width Images"),ci=n(),ui=o("p"),fi=i("Wide-width images work similarly to the above, but naturally, we don‚Äôt want to make them the "),gi=o("em"),wi=i("full"),mi=i(" width of the screen; otherwise, there would be no difference between wide-width and full-width (and that, of course, would just be silly)."),pi=n(),vi=o("p"),yi=i("How wide the image should be, exactly, as well as how to achieve the effect, is ultimately up to the theme author. However, I find something like this bit of CSS works quite well:"),bi=n(),r(Ei.$$.fragment),$i=n(),ki=o("p"),Si=o("img"),Ci=n(),Pi=o("p"),Ii=i("Our wide width image spans the 100% of its parent container, plus an extra 20 viewport width units."),Oi=n(),Ti=o("p"),Di=i("You might notice that in this case, I chose "),ji=o("em"),Gi=i("not"),Ai=i(" to use negative margin, and instead, opted for a negative value on the "),Wi=o("code"),Mi=i("left"),Fi=i(" property (paired with relative positioning). Why‚Äôs that, and what‚Äôs the difference?"),Hi=n(),Ni=o("p"),_i=i("For the ‚Äúwhy,‚Äù it‚Äôs mainly because: I wanted to illustrate that "),qi=o("strong"),zi=i("there‚Äôs more than one technique available here."),Ri=n(),Bi=o("p"),Yi=i("As for the difference‚Ä¶well, to be honest, which works better will probably depend on your use case, and the environment you‚Äôre working in. None of this CSS exists in a vacuum (hopefully)."),Li=n(),Ui=o("p"),Vi=i("If your images already have a side margin, then overriding that with a negative margin will probably work better (or, alternatively, you could just be aware that you may need to remove the side margin if you‚Äôre utilizing relative positioning)."),Ji=n(),Ki=o("p"),Qi=i("There are undoubtedly posts written on the advantages and disadvantages of both techniques, and I don‚Äôt feel the need to retread that ground here. Some developers avoid negative margins like the plague; I think they‚Äôre fine in a situation like this, and as long as you‚Äôre not just using them to avoid changing a different part of the CSS, or as a hacky way to get around something that should just be fixed on its own."),Xi=n(),Zi=o("p"),en=i("Another note here: unless you‚Äôre ok with your wide-width images bleeding off the page at smaller screen sizes, you‚Äôll need to either use a media query, and/or replace the "),tn=o("code"),an=i("10vw"),on=i(" with a value that doesn‚Äôt exceed the side padding/margin around your main content container."),nn=n(),rn=o("p"),sn=i("(For example: if your main content container element, whatever that may be, has a padding or margin of "),hn=o("code"),ln=i("32px"),dn=i(" on each side, you‚Äôd want to make sure your "),cn=o("code"),un=i(".alignwide"),fn=i(" class had a width of no greater than "),gn=o("code"),wn=i("calc(100% + 64px)"),mn=i(")."),pn=n(),vn=o("p"),yn=i("I eventually landed on something like this for my personal use on wide-width images; they‚Äôre fullscreen up to a certain screen size (since they may as well be on mobile), then differentiate themselves starting at a certain "),bn=o("code"),En=i("@media"),$n=i(" breakpoint (likely the same one, or just above, where your content container element stops expanding and centers itself at a static width instead):"),kn=n(),r(Sn.$$.fragment),xn=n(),Cn=o("p"),Pn=o("strong"),In=i("That‚Äôs it!"),On=i(" I hope this was helpful in getting your theme‚Äôs images set up for Gutenberg support. Enjoy your new content editing experience!"),this.h()},l(e){t=s(e,"P",{});var o=h(t);a=l(o,"Recently, I‚Äôve been using (and loving) the new "),E=s(o,"A",{href:!0,rel:!0});var i=h(E);T=l(i,"Gutenberg editor"),i.forEach(d),D=l(o," in WordPress 5.0+. It‚Äôs a huge step forward in both what developers can offer, and what users can expect out of their content creation experience."),o.forEach(d),j=c(e),G=s(e,"P",{});var n=h(G);A=l(n,"One of the new features of Gutenberg that I particularly enjoy is the ability to set an image as either ‚Äúwide width‚Äù or ‚Äúfull width,‚Äù to allow it to break out of its container element in order to span a greater width of the screen."),n.forEach(d),W=c(e),M=s(e,"P",{});var r=h(M);F=l(r,"Here‚Äôs a visual example of what I mean:"),r.forEach(d),H=c(e),N=s(e,"P",{});var f=h(N);_=s(f,"IMG",{src:!0,alt:!0}),f.forEach(d),z=c(e),R=s(e,"P",{});var g=h(R);B=s(g,"STRONG",{});var w=h(B);Y=l(w,"Ordinarily, an image would be constrained to the content width"),w.forEach(d),L=l(g," (visualized by the dotted lines in the image above). Being able to allow images to break out of those confines is a powerful layout tool, though, as it allows content authors to add a great deal of visual interest and hierarchy to any page, post, or content supported by the new Gutenberg editor!"),g.forEach(d),U=c(e),V=s(e,"H2",{});var m=h(V);J=l(m,"Adding Theme Support"),m.forEach(d),K=c(e),Q=s(e,"P",{});var p=h(Q);X=l(p,"Adding support for wide- and full-width images is up to the theme developer. Fortunately, from the backend, it‚Äôs dead simple; just add this line to the theme‚Äôs "),Z=s(p,"CODE",{});var v=h(Z);ee=l(v,"functions.php"),v.forEach(d),te=l(p," file (please be sure to use a "),ae=s(p,"A",{href:!0,rel:!0});var y=h(ae);oe=l(y,"child theme"),y.forEach(d),ie=l(p," as appropriate):"),p.forEach(d),ne=c(e),u(re.$$.fragment,e),se=c(e),he=s(e,"P",{});var b=h(he);le=l(b,"That tidy little snippet will make two new options available for image blocks in the Gutenberg editor, in addition to the usual options: ‚Äúwide width‚Äù and ‚Äúfull width,‚Äù highlighted in the image below:"),b.forEach(d),de=c(e),ce=s(e,"P",{});var $=h(ce);ue=s($,"IMG",{src:!0,alt:!0}),$.forEach(d),ge=c(e),we=s(e,"P",{});var k=h(we);me=l(k,"When the user chooses either of these options, the "),pe=s(k,"CODE",{});var S=h(pe);ve=l(S,"<figure>"),S.forEach(d),ye=l(k," element that appears on the front-end of the site (oh yeah‚Äîby default, Gutenberg puts images inside "),be=s(k,"CODE",{});var x=h(be);Ee=l(x,"<figure>"),x.forEach(d),$e=l(k," elements, so that captions can be added easily. Anyway, that element, i.e., the image‚Äôs container) will have either an "),ke=s(k,"CODE",{});var C=h(ke);Se=l(C,"alignwide"),C.forEach(d),xe=l(k," or "),Ce=s(k,"CODE",{});var P=h(Ce);Pe=l(P,"alignfull"),P.forEach(d),Ie=l(k," class applied to it (depending, of course, on which was selected by the content author)."),k.forEach(d),Oe=c(e),Te=s(e,"P",{});var I=h(Te);De=s(I,"STRONG",{});var O=h(De);je=l(O,"That‚Äôs it for the PHP/back-end setup."),O.forEach(d),Ge=l(I," Other than the snippet above, everything we‚Äôve covered so far is fully automatic and just handled by WordPress for us."),I.forEach(d),Ae=c(e),We=s(e,"P",{});var q=h(We);Me=l(q,"However, we still need to actually "),Fe=s(q,"EM",{});var fe=h(Fe);He=l(fe,"implement"),fe.forEach(d),Ne=l(q," these layout techniques on the front-end of the site, using our theme‚Äôs CSS. Otherwise, nothing will happen visually when a content author chooses the full-width or wide-with image option."),q.forEach(d),_e=c(e),qe=s(e,"H2",{});var Et=h(qe);ze=l(Et,"Front-End CSS for Full-Width Images"),Et.forEach(d),Re=c(e),Be=s(e,"P",{});var Ca=h(Be);Ye=l(Ca,"I wanted to write this post mainly to share one technique that I came across online, which I feel is particularly clever in this situation (and which is not at all exclusive to Gutenberg or WordPress):"),Ca.forEach(d),Le=c(e),u(Ue.$$.fragment,e),Ve=c(e),Je=s(e,"P",{});var ao=h(Je);Ke=l(ao,"Even though that bit of CSS above is very brief (only two properties!), I still want to be sure we cover what it‚Äôs doing, because it‚Äôs a pretty elegant solution for our needs."),ao.forEach(d),Qe=c(e),Xe=s(e,"P",{});var xi=h(Xe);Ze=l(xi,"The "),et=s(xi,"CODE",{});var Tn=h(et);tt=l(Tn,"width"),Tn.forEach(d),at=l(xi," property is pretty straightforward: a value of "),ot=s(xi,"CODE",{});var Dn=h(ot);it=l(Dn,"100vw"),Dn.forEach(d),nt=l(xi," ensures that the image is always exactly as wide as the viewport, no matter what size that might be. (Remember, "),rt=s(xi,"CODE",{});var jn=h(rt);st=l(jn,"width: 100%"),jn.forEach(d),ht=l(xi," might not work here, because percentages are based on the width of the "),lt=s(xi,"EM",{});var Gn=h(lt);dt=l(Gn,"parent element"),Gn.forEach(d),ct=l(xi,", not the screen, and our image‚Äôs parent element may or may not be as wide as the viewport.)"),xi.forEach(d),ut=c(e),ft=s(e,"P",{});var An=h(ft);gt=l(An,"However, making the image "),wt=s(An,"CODE",{});var Wn=h(wt);mt=l(Wn,"100vw"),Wn.forEach(d),pt=l(An," wide on its own doesn‚Äôt do us much good on its own, because it would overflow the screen, as shown in this image:"),An.forEach(d),vt=c(e),yt=s(e,"P",{});var Mn=h(yt);bt=s(Mn,"IMG",{src:!0,alt:!0}),Mn.forEach(d),$t=c(e),kt=s(e,"P",{});var Fn=h(kt);St=l(Fn,"That brings us to the "),xt=s(Fn,"CODE",{});var Hn=h(xt);Ct=l(Hn,"margin"),Hn.forEach(d),Pt=l(Fn," property, which is the clever part. This is where the real CSS magic happens:"),Fn.forEach(d),It=c(e),u(Ot.$$.fragment,e),Tt=c(e),Dt=s(e,"P",{});var Nn=h(Dt);jt=l(Nn,"In case you‚Äôre new to the "),Gt=s(Nn,"CODE",{});var _n=h(Gt);At=l(_n,"calc"),_n.forEach(d),Wt=l(Nn," function, in essence, it lets you do math to set CSS values. It‚Äôs most commonly used in responsive design to, say, let your image take up a quarter of the available space, minus an 8px margin (which would be "),Mt=s(Nn,"CODE",{});var qn=h(Mt);Ft=l(qn,"width: calc(25% - 8px);"),qn.forEach(d),Ht=l(Nn,")."),Nn.forEach(d),Nt=c(e),_t=s(e,"P",{});var zn=h(_t);qt=l(zn,"But "),zt=s(zn,"CODE",{});var Rn=h(zt);Rt=l(Rn,"calc"),Rn.forEach(d),Bt=l(zn," has many other uses, and can crunch numbers on any dynamic or static values, even between two different units of measurement (as in the previous example, to subtract "),Yt=s(zn,"EM",{});var Bn=h(Yt);Lt=l(Bn,"pixels"),Bn.forEach(d),Ut=l(zn," from a "),Vt=s(zn,"EM",{});var Yn=h(Vt);Jt=l(Yn,"percentage"),Yn.forEach(d),Kt=l(zn,")."),zn.forEach(d),Qt=c(e),Xt=s(e,"P",{});var Ln=h(Xt);Zt=l(Ln,"Back to our fullwidth image: in order to make the image the full width of the screen and position it properly, we want to set a "),ea=s(Ln,"EM",{});var Un=h(ea);ta=l(Un,"negative margin."),Un.forEach(d),aa=l(Ln," And as you‚Äôve probably guessed, we‚Äôll need "),oa=s(Ln,"CODE",{});var Vn=h(oa);ia=l(Vn,"calc"),Vn.forEach(d),na=l(Ln," to help us, because the distance between the side of our container and the left edge of the screen is responsive, and always changing."),Ln.forEach(d),ra=c(e),sa=s(e,"P",{});var Jn=h(sa);ha=s(Jn,"STRONG",{});var Kn=h(ha);la=l(Kn,"So how do we determine how far the image needs to shift to the left?"),Kn.forEach(d),da=l(Jn," Answer: we don‚Äôt. üòé"),Jn.forEach(d),ca=c(e),ua=s(e,"P",{});var Qn=h(ua);fa=l(Qn,"Instead, we‚Äôre going to send our image "),ga=s(Qn,"EM",{});var Xn=h(ga);wa=l(Xn,"halfway to the right."),Xn.forEach(d),ma=l(Qn," That‚Äôs the "),pa=s(Qn,"CODE",{});var Zn=h(pa);va=l(Zn,"50%"),Zn.forEach(d),ya=l(Qn," portion of our "),ba=s(Qn,"CODE",{});var er=h(ba);Ea=l(er,"calc"),er.forEach(d),$a=l(Qn," formula:"),Qn.forEach(d),ka=c(e),Sa=s(e,"P",{});var tr=h(Sa);xa=s(tr,"IMG",{src:!0,alt:!0}),tr.forEach(d),Pa=c(e),Ia=s(e,"P",{});var ar=h(Ia);Oa=l(ar,"Now we can begin to see the full picture (no pun intended)!"),ar.forEach(d),Ta=c(e),Da=s(e,"P",{});var or=h(Da);ja=l(or,"Since percentage values are calculated based on the parent element‚Äôs width, a "),Ga=s(or,"CODE",{});var ir=h(Ga);Aa=l(ir,"margin"),ir.forEach(d),Wa=l(or," of "),Ma=s(or,"CODE",{});var nr=h(Ma);Fa=l(nr,"50%"),nr.forEach(d),Ha=l(or," sends the image exactly halfway across the parent element. And since our parent element is already centered on the screen, that means "),Na=s(or,"STRONG",{});var rr=h(Na);_a=l(rr,"our image is now exactly halfway across the viewport, no matter how wide the viewport is!"),rr.forEach(d),or.forEach(d),qa=c(e),za=s(e,"P",{});var sr=h(za);Ra=l(sr,"Now that our image‚Äôs left side is directly in the center of the screen, the rest is just "),Ba=s(sr,"EM",{});var hr=h(Ba);Ya=l(hr,"subtracting"),hr.forEach(d),La=c(sr),Ua=s(sr,"CODE",{});var lr=h(Ua);Va=l(lr,"50vw"),lr.forEach(d),Ja=l(sr," from the left margin‚Äîwhich is the other half of our calculation. Thus, "),Ka=s(sr,"CODE",{});var dr=h(Ka);Qa=l(dr,"calc(50% - 50vw)"),dr.forEach(d),Xa=l(sr," gives us exactly the full-width image we‚Äôre looking for!"),sr.forEach(d),Za=c(e),eo=s(e,"P",{});var cr=h(eo);to=s(cr,"IMG",{src:!0,alt:!0}),cr.forEach(d),oo=c(e),io=s(e,"H3",{});var ur=h(io);no=l(ur,"Some Extra Notes About the Above Full-Width CSS"),ur.forEach(d),ro=c(e),so=s(e,"P",{});var fr=h(so);ho=l(fr,"Once more, here‚Äôs the CSS from above:"),fr.forEach(d),lo=c(e),u(co.$$.fragment,e),uo=c(e),fo=s(e,"P",{});var gr=h(fo);go=l(gr,"There‚Äôs one small issue here, which is: we don‚Äôt take into account the possibility that our "),wo=s(gr,"CODE",{});var wr=h(wo);mo=l(wr,".alignfull"),wr.forEach(d),po=l(gr," element might already have a right margin. If it does, it will actually be taking up "),vo=s(gr,"EM",{});var mr=h(vo);yo=l(mr,"more than"),mr.forEach(d),bo=l(gr," the full width of the screen, and that‚Äôs no good."),gr.forEach(d),Eo=c(e),$o=s(e,"P",{});var pr=h($o);ko=l(pr,"Plus, we probably want space above and below our fullwidth image, just to make it stand out a little more. So really, instead of setting just a "),So=s(pr,"CODE",{});var vr=h(So);xo=l(vr,"margin-left"),vr.forEach(d),Co=l(pr," property, we‚Äôd most likely be better off setting all four sides at once:"),pr.forEach(d),Po=c(e),u(Io.$$.fragment,e),Oo=c(e),To=s(e,"P",{});var yr=h(To);Do=l(yr,"This way, we‚Äôve made sure all four sides of our image are accounted for while also giving the image a little breathing room."),yr.forEach(d),jo=c(e),Go=s(e,"P",{});var br=h(Go);Ao=l(br,"And if you‚Äôre wondering (or just wanting to get super technical): yes, this "),Wo=s(br,"EM",{});var Er=h(Wo);Mo=l(Er,"does"),Er.forEach(d),Fo=l(br," mean that "),Ho=s(br,"EM",{});var $r=h(Ho);No=l($r,"both"),$r.forEach(d),_o=l(br," sides of the image get brought in by "),qo=s(br,"CODE",{});var kr=h(qo);zo=l(kr,"50%"),kr.forEach(d),Ro=l(br,", then are each pulled back out "),Bo=s(br,"CODE",{});var Sr=h(Bo);Yo=l(Sr,"50vw"),Sr.forEach(d),Lo=l(br,". If you didn‚Äôt have the "),Uo=s(br,"CODE",{});var xr=h(Uo);Vo=l(xr,"- 50vw"),xr.forEach(d),Jo=l(br," part of the CSS above, the image would effectively be 0% wide (since it would have a margin of "),Ko=s(br,"CODE",{});var Cr=h(Ko);Qo=l(Cr,"50%"),Cr.forEach(d),Xo=l(br," on both sides). Interesting! ü§ì"),br.forEach(d),Zo=c(e),ei=s(e,"P",{});var Pr=h(ei);ti=l(Pr,"Lastly, as you probably realized: "),ai=s(Pr,"STRONG",{});var Ir=h(ai);oi=l(Ir,"this post assumes the content container is already centered on the screen"),Ir.forEach(d),ii=l(Pr,". If your content is "),ni=s(Pr,"EM",{});var Or=h(ni);ri=l(Or,"not"),Or.forEach(d),si=l(Pr," already centered in the viewport, this specific CSS won‚Äôt work for you, and you‚Äôll need to do something a little more creative to get your images full-width."),Pr.forEach(d),hi=c(e),li=s(e,"H2",{});var Tr=h(li);di=l(Tr,"Front-End CSS for Wide-Width Images"),Tr.forEach(d),ci=c(e),ui=s(e,"P",{});var Dr=h(ui);fi=l(Dr,"Wide-width images work similarly to the above, but naturally, we don‚Äôt want to make them the "),gi=s(Dr,"EM",{});var jr=h(gi);wi=l(jr,"full"),jr.forEach(d),mi=l(Dr," width of the screen; otherwise, there would be no difference between wide-width and full-width (and that, of course, would just be silly)."),Dr.forEach(d),pi=c(e),vi=s(e,"P",{});var Gr=h(vi);yi=l(Gr,"How wide the image should be, exactly, as well as how to achieve the effect, is ultimately up to the theme author. However, I find something like this bit of CSS works quite well:"),Gr.forEach(d),bi=c(e),u(Ei.$$.fragment,e),$i=c(e),ki=s(e,"P",{});var Ar=h(ki);Si=s(Ar,"IMG",{src:!0,alt:!0}),Ar.forEach(d),Ci=c(e),Pi=s(e,"P",{});var Wr=h(Pi);Ii=l(Wr,"Our wide width image spans the 100% of its parent container, plus an extra 20 viewport width units."),Wr.forEach(d),Oi=c(e),Ti=s(e,"P",{});var Mr=h(Ti);Di=l(Mr,"You might notice that in this case, I chose "),ji=s(Mr,"EM",{});var Fr=h(ji);Gi=l(Fr,"not"),Fr.forEach(d),Ai=l(Mr," to use negative margin, and instead, opted for a negative value on the "),Wi=s(Mr,"CODE",{});var Hr=h(Wi);Mi=l(Hr,"left"),Hr.forEach(d),Fi=l(Mr," property (paired with relative positioning). Why‚Äôs that, and what‚Äôs the difference?"),Mr.forEach(d),Hi=c(e),Ni=s(e,"P",{});var Nr=h(Ni);_i=l(Nr,"For the ‚Äúwhy,‚Äù it‚Äôs mainly because: I wanted to illustrate that "),qi=s(Nr,"STRONG",{});var _r=h(qi);zi=l(_r,"there‚Äôs more than one technique available here."),_r.forEach(d),Nr.forEach(d),Ri=c(e),Bi=s(e,"P",{});var qr=h(Bi);Yi=l(qr,"As for the difference‚Ä¶well, to be honest, which works better will probably depend on your use case, and the environment you‚Äôre working in. None of this CSS exists in a vacuum (hopefully)."),qr.forEach(d),Li=c(e),Ui=s(e,"P",{});var zr=h(Ui);Vi=l(zr,"If your images already have a side margin, then overriding that with a negative margin will probably work better (or, alternatively, you could just be aware that you may need to remove the side margin if you‚Äôre utilizing relative positioning)."),zr.forEach(d),Ji=c(e),Ki=s(e,"P",{});var Rr=h(Ki);Qi=l(Rr,"There are undoubtedly posts written on the advantages and disadvantages of both techniques, and I don‚Äôt feel the need to retread that ground here. Some developers avoid negative margins like the plague; I think they‚Äôre fine in a situation like this, and as long as you‚Äôre not just using them to avoid changing a different part of the CSS, or as a hacky way to get around something that should just be fixed on its own."),Rr.forEach(d),Xi=c(e),Zi=s(e,"P",{});var Br=h(Zi);en=l(Br,"Another note here: unless you‚Äôre ok with your wide-width images bleeding off the page at smaller screen sizes, you‚Äôll need to either use a media query, and/or replace the "),tn=s(Br,"CODE",{});var Yr=h(tn);an=l(Yr,"10vw"),Yr.forEach(d),on=l(Br," with a value that doesn‚Äôt exceed the side padding/margin around your main content container."),Br.forEach(d),nn=c(e),rn=s(e,"P",{});var Lr=h(rn);sn=l(Lr,"(For example: if your main content container element, whatever that may be, has a padding or margin of "),hn=s(Lr,"CODE",{});var Ur=h(hn);ln=l(Ur,"32px"),Ur.forEach(d),dn=l(Lr," on each side, you‚Äôd want to make sure your "),cn=s(Lr,"CODE",{});var Vr=h(cn);un=l(Vr,".alignwide"),Vr.forEach(d),fn=l(Lr," class had a width of no greater than "),gn=s(Lr,"CODE",{});var Jr=h(gn);wn=l(Jr,"calc(100% + 64px)"),Jr.forEach(d),mn=l(Lr,")."),Lr.forEach(d),pn=c(e),vn=s(e,"P",{});var Kr=h(vn);yn=l(Kr,"I eventually landed on something like this for my personal use on wide-width images; they‚Äôre fullscreen up to a certain screen size (since they may as well be on mobile), then differentiate themselves starting at a certain "),bn=s(Kr,"CODE",{});var Qr=h(bn);En=l(Qr,"@media"),Qr.forEach(d),$n=l(Kr," breakpoint (likely the same one, or just above, where your content container element stops expanding and centers itself at a static width instead):"),Kr.forEach(d),kn=c(e),u(Sn.$$.fragment,e),xn=c(e),Cn=s(e,"P",{});var Xr=h(Cn);Pn=s(Xr,"STRONG",{});var Zr=h(Pn);In=l(Zr,"That‚Äôs it!"),Zr.forEach(d),On=l(Xr," I hope this was helpful in getting your theme‚Äôs images set up for Gutenberg support. Enjoy your new content editing experience!"),Xr.forEach(d),this.h()},h(){f(E,"href","https://wordpress.org/gutenberg/"),f(E,"rel","nofollow"),g(_.src,q="/images/post_images/Untitled-1024x928.png")||f(_,"src","/images/post_images/Untitled-1024x928.png"),f(_,"alt","Most of the content is constrained to a fixed-width container, but wide-width and full-width images may expand outside that container's boundaries."),f(ae,"href","https://api.joshcollinsworth.com/wordpress-child-theme-explanation/"),f(ae,"rel","nofollow"),g(ue.src,fe="/images/post_images/gutenberg-image-toolbar-with-wide.png")||f(ue,"src","/images/post_images/gutenberg-image-toolbar-with-wide.png"),f(ue,"alt","'Wide width' and 'full width' options, highlighted, appear in the Gutenberg editor if the active theme supports them."),g(bt.src,Et="/images/post_images/fullwidth-overflow-1024x600.png")||f(bt,"src","/images/post_images/fullwidth-overflow-1024x600.png"),f(bt,"alt","Setting the image width is only part of the solution, since it will overflow the screen unless it's repositioned."),g(xa.src,Ca="/images/post_images/fullwidth-left.png")||f(xa,"src","/images/post_images/fullwidth-left.png"),f(xa,"alt","Setting a side margin of 50% on the image puts its left side directly in the center of its parent element."),g(to.src,ao="/images/post_images/fullwidth-achieved.png")||f(to,"src","/images/post_images/fullwidth-achieved.png"),f(to,"alt","A left margin of 50% - 50vw gives us the perfectly centered, fullwidth image we're looking for."),g(Si.src,xi="/images/post_images/wide-width-only-1024x713.png")||f(Si,"src","/images/post_images/wide-width-only-1024x713.png"),f(Si,"alt","A wide-width image, breaking outside its content container by an additional 20 VW")},m(e,o){w(e,t,o),m(t,a),m(t,E),m(E,T),m(t,D),w(e,j,o),w(e,G,o),m(G,A),w(e,W,o),w(e,M,o),m(M,F),w(e,H,o),w(e,N,o),m(N,_),w(e,z,o),w(e,R,o),m(R,B),m(B,Y),m(R,L),w(e,U,o),w(e,V,o),m(V,J),w(e,K,o),w(e,Q,o),m(Q,X),m(Q,Z),m(Z,ee),m(Q,te),m(Q,ae),m(ae,oe),m(Q,ie),w(e,ne,o),p(re,e,o),w(e,se,o),w(e,he,o),m(he,le),w(e,de,o),w(e,ce,o),m(ce,ue),w(e,ge,o),w(e,we,o),m(we,me),m(we,pe),m(pe,ve),m(we,ye),m(we,be),m(be,Ee),m(we,$e),m(we,ke),m(ke,Se),m(we,xe),m(we,Ce),m(Ce,Pe),m(we,Ie),w(e,Oe,o),w(e,Te,o),m(Te,De),m(De,je),m(Te,Ge),w(e,Ae,o),w(e,We,o),m(We,Me),m(We,Fe),m(Fe,He),m(We,Ne),w(e,_e,o),w(e,qe,o),m(qe,ze),w(e,Re,o),w(e,Be,o),m(Be,Ye),w(e,Le,o),p(Ue,e,o),w(e,Ve,o),w(e,Je,o),m(Je,Ke),w(e,Qe,o),w(e,Xe,o),m(Xe,Ze),m(Xe,et),m(et,tt),m(Xe,at),m(Xe,ot),m(ot,it),m(Xe,nt),m(Xe,rt),m(rt,st),m(Xe,ht),m(Xe,lt),m(lt,dt),m(Xe,ct),w(e,ut,o),w(e,ft,o),m(ft,gt),m(ft,wt),m(wt,mt),m(ft,pt),w(e,vt,o),w(e,yt,o),m(yt,bt),w(e,$t,o),w(e,kt,o),m(kt,St),m(kt,xt),m(xt,Ct),m(kt,Pt),w(e,It,o),p(Ot,e,o),w(e,Tt,o),w(e,Dt,o),m(Dt,jt),m(Dt,Gt),m(Gt,At),m(Dt,Wt),m(Dt,Mt),m(Mt,Ft),m(Dt,Ht),w(e,Nt,o),w(e,_t,o),m(_t,qt),m(_t,zt),m(zt,Rt),m(_t,Bt),m(_t,Yt),m(Yt,Lt),m(_t,Ut),m(_t,Vt),m(Vt,Jt),m(_t,Kt),w(e,Qt,o),w(e,Xt,o),m(Xt,Zt),m(Xt,ea),m(ea,ta),m(Xt,aa),m(Xt,oa),m(oa,ia),m(Xt,na),w(e,ra,o),w(e,sa,o),m(sa,ha),m(ha,la),m(sa,da),w(e,ca,o),w(e,ua,o),m(ua,fa),m(ua,ga),m(ga,wa),m(ua,ma),m(ua,pa),m(pa,va),m(ua,ya),m(ua,ba),m(ba,Ea),m(ua,$a),w(e,ka,o),w(e,Sa,o),m(Sa,xa),w(e,Pa,o),w(e,Ia,o),m(Ia,Oa),w(e,Ta,o),w(e,Da,o),m(Da,ja),m(Da,Ga),m(Ga,Aa),m(Da,Wa),m(Da,Ma),m(Ma,Fa),m(Da,Ha),m(Da,Na),m(Na,_a),w(e,qa,o),w(e,za,o),m(za,Ra),m(za,Ba),m(Ba,Ya),m(za,La),m(za,Ua),m(Ua,Va),m(za,Ja),m(za,Ka),m(Ka,Qa),m(za,Xa),w(e,Za,o),w(e,eo,o),m(eo,to),w(e,oo,o),w(e,io,o),m(io,no),w(e,ro,o),w(e,so,o),m(so,ho),w(e,lo,o),p(co,e,o),w(e,uo,o),w(e,fo,o),m(fo,go),m(fo,wo),m(wo,mo),m(fo,po),m(fo,vo),m(vo,yo),m(fo,bo),w(e,Eo,o),w(e,$o,o),m($o,ko),m($o,So),m(So,xo),m($o,Co),w(e,Po,o),p(Io,e,o),w(e,Oo,o),w(e,To,o),m(To,Do),w(e,jo,o),w(e,Go,o),m(Go,Ao),m(Go,Wo),m(Wo,Mo),m(Go,Fo),m(Go,Ho),m(Ho,No),m(Go,_o),m(Go,qo),m(qo,zo),m(Go,Ro),m(Go,Bo),m(Bo,Yo),m(Go,Lo),m(Go,Uo),m(Uo,Vo),m(Go,Jo),m(Go,Ko),m(Ko,Qo),m(Go,Xo),w(e,Zo,o),w(e,ei,o),m(ei,ti),m(ei,ai),m(ai,oi),m(ei,ii),m(ei,ni),m(ni,ri),m(ei,si),w(e,hi,o),w(e,li,o),m(li,di),w(e,ci,o),w(e,ui,o),m(ui,fi),m(ui,gi),m(gi,wi),m(ui,mi),w(e,pi,o),w(e,vi,o),m(vi,yi),w(e,bi,o),p(Ei,e,o),w(e,$i,o),w(e,ki,o),m(ki,Si),w(e,Ci,o),w(e,Pi,o),m(Pi,Ii),w(e,Oi,o),w(e,Ti,o),m(Ti,Di),m(Ti,ji),m(ji,Gi),m(Ti,Ai),m(Ti,Wi),m(Wi,Mi),m(Ti,Fi),w(e,Hi,o),w(e,Ni,o),m(Ni,_i),m(Ni,qi),m(qi,zi),w(e,Ri,o),w(e,Bi,o),m(Bi,Yi),w(e,Li,o),w(e,Ui,o),m(Ui,Vi),w(e,Ji,o),w(e,Ki,o),m(Ki,Qi),w(e,Xi,o),w(e,Zi,o),m(Zi,en),m(Zi,tn),m(tn,an),m(Zi,on),w(e,nn,o),w(e,rn,o),m(rn,sn),m(rn,hn),m(hn,ln),m(rn,dn),m(rn,cn),m(cn,un),m(rn,fn),m(rn,gn),m(gn,wn),m(rn,mn),w(e,pn,o),w(e,vn,o),m(vn,yn),m(vn,bn),m(bn,En),m(vn,$n),w(e,kn,o),p(Sn,e,o),w(e,xn,o),w(e,Cn,o),m(Cn,Pn),m(Pn,In),m(Cn,On),Tn=!0},p(e,[t]){const a={};1&t&&(a.$$scope={dirty:t,ctx:e}),re.$set(a);const o={};1&t&&(o.$$scope={dirty:t,ctx:e}),Ue.$set(o);const i={};1&t&&(i.$$scope={dirty:t,ctx:e}),Ot.$set(i);const n={};1&t&&(n.$$scope={dirty:t,ctx:e}),co.$set(n);const r={};1&t&&(r.$$scope={dirty:t,ctx:e}),Io.$set(r);const s={};1&t&&(s.$$scope={dirty:t,ctx:e}),Ei.$set(s);const h={};1&t&&(h.$$scope={dirty:t,ctx:e}),Sn.$set(h)},i(e){Tn||(v(re.$$.fragment,e),v(Ue.$$.fragment,e),v(Ot.$$.fragment,e),v(co.$$.fragment,e),v(Io.$$.fragment,e),v(Ei.$$.fragment,e),v(Sn.$$.fragment,e),Tn=!0)},o(e){y(re.$$.fragment,e),y(Ue.$$.fragment,e),y(Ot.$$.fragment,e),y(co.$$.fragment,e),y(Io.$$.fragment,e),y(Ei.$$.fragment,e),y(Sn.$$.fragment,e),Tn=!1},d(e){e&&d(t),e&&d(j),e&&d(G),e&&d(W),e&&d(M),e&&d(H),e&&d(N),e&&d(z),e&&d(R),e&&d(U),e&&d(V),e&&d(K),e&&d(Q),e&&d(ne),b(re,e),e&&d(se),e&&d(he),e&&d(de),e&&d(ce),e&&d(ge),e&&d(we),e&&d(Oe),e&&d(Te),e&&d(Ae),e&&d(We),e&&d(_e),e&&d(qe),e&&d(Re),e&&d(Be),e&&d(Le),b(Ue,e),e&&d(Ve),e&&d(Je),e&&d(Qe),e&&d(Xe),e&&d(ut),e&&d(ft),e&&d(vt),e&&d(yt),e&&d($t),e&&d(kt),e&&d(It),b(Ot,e),e&&d(Tt),e&&d(Dt),e&&d(Nt),e&&d(_t),e&&d(Qt),e&&d(Xt),e&&d(ra),e&&d(sa),e&&d(ca),e&&d(ua),e&&d(ka),e&&d(Sa),e&&d(Pa),e&&d(Ia),e&&d(Ta),e&&d(Da),e&&d(qa),e&&d(za),e&&d(Za),e&&d(eo),e&&d(oo),e&&d(io),e&&d(ro),e&&d(so),e&&d(lo),b(co,e),e&&d(uo),e&&d(fo),e&&d(Eo),e&&d($o),e&&d(Po),b(Io,e),e&&d(Oo),e&&d(To),e&&d(jo),e&&d(Go),e&&d(Zo),e&&d(ei),e&&d(hi),e&&d(li),e&&d(ci),e&&d(ui),e&&d(pi),e&&d(vi),e&&d(bi),b(Ei,e),e&&d($i),e&&d(ki),e&&d(Ci),e&&d(Pi),e&&d(Oi),e&&d(Ti),e&&d(Hi),e&&d(Ni),e&&d(Ri),e&&d(Bi),e&&d(Li),e&&d(Ui),e&&d(Ji),e&&d(Ki),e&&d(Xi),e&&d(Zi),e&&d(nn),e&&d(rn),e&&d(pn),e&&d(vn),e&&d(kn),b(Sn,e),e&&d(xn),e&&d(Cn)}}}const D={title:"Adding Gutenberg Full- and Wide-Width Image Support to Your WordPress Theme",date:"2019-03-16",updated:"2020-05-13",categories:["css","web","wordpress"],coverImage:"gutenberg-wide-illustration.png",excerpt:"Gutenberg brings with it the ability to set image blocks as full-width or wide-width. This article talks about how to enable support for that feature in your theme, and one way to write the CSS that makes it work."};class j extends e{constructor(e){super(),t(this,e,null,T,a,{})}}export{j as default,D as metadata};
